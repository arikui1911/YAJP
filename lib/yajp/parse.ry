class YAJP::ParseCore
  options no_result_var

  rule

  json : element

  element : object
          | array
          | STRING
          {
            [:string, pos(val[0]), val[0].value]
          }
          | NUMBER
          {
            [:number, pos(val[0]), val[0].value]
          }
          | TRUE
          {
            [:true, pos(val[0])]
          }
          | FALSE
          {
            [:false, pos(val[0])]
          }
          | NULL
          {
            [:null, pos(val[0])]
          }

  object : '{' '}'
         {
           [:object, pos(val[0]), []]
         }
         | '{' members '}'
         {
           [:object, pos(val[0]), val[1]]
         }

  members : member
          {
            [val[0]]
          }
          | members ',' member
          {
            val[0] << val[2]
          }

  member : STRING ':' element
         {
           [val[0].value, val[2]]
         }

  elements : element
           {
             [val[0]]
           }
           | elements ',' element
           {
             val[0] << val[2]
           }

  array : '[' ']'
        {
          [:array, pos(val[0]), []]
        }
        | '[' elements ']'
        {
          [:array, pos(val[0]), val[1]]
        }

end

---- inner

def initialize(lexer)
  @lexer = lexer
end

def parse
  do_parse
end

private

def next_token
  token = @lexer.read
  return [false, nil] if token.kind == :EOF
  [token.kind, token]
end

def pos(token)
  [token.line, token.col]
end

---- footer

module YAJP
  private_constant :ParseCore
end


